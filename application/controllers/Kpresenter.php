<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Kpresenter extends CI_Controller{
    function __construct()
    {
        parent::__construct();
		
/* Password protect the entire presenter ==================
		# group/groups (by name)
		$group = array ('presenter','admin');
		if (!$this->ion_auth->in_group($group))
		{
			$this->session->set_flashdata('message', 'You are not authorized to view this page');
			redirect('auth/login');
		}
=============================== End of password protection for the entire presenter 
*/		

		$this->form_validation->set_error_delimiters($this->config->item('error_start_delimiter', 'ion_auth'), $this->config->item('error_end_delimiter', 'ion_auth'));
        $this->load->model('Presenter_model');
        $this->load->model('Slideshow_song_model');
        $this->load->model('Slide_model');
        $this->load->model('Current_slide_model');
        $this->load->model('Artiste_model');
		$this->load->helper('string'); //pull in strings to generate random()
		$this->load->helper('file'); //works with files
    } 

    /*
     * Listing of presenter
     */
    function index()
    {
		
		$group = array ('presenter','admin');
		if (!$this->ion_auth->in_group($group))
		{
			$this->session->set_flashdata('message', 'You are not authorized to view this page');
			redirect('auth/login');
		} 
		
		$data['presenter'] = $this->Presenter_model->get_all_presenter();
        
		//if a presenter and slideshow are already selected, proceed to presener view
		if ($this->session->presenter_id && $this->session->slideshow_id)
        	{
        		$this->load->model('Song_model');
				$data['_view'] = 'presenter/index';
				$data['this_presenter'] = $this->Presenter_model->get_presenter($this->session->presenter_id);
				$data['this_slideshow'] = $this->Presenter_model->get_slideshow($this->session->slideshow_id);
				$data['slides'] = $this->Slide_model->get_all_slideshow_slides($this->session->slideshow_id);
				$data['slides_count'] = $this->Presenter_model->count_slides($this->session->slideshow_id);
				$data['songs_titles'] = $this->Song_model->song_titles();
				$data['sub_slides_titles'] = $this->Slideshow_song_model->song_slides_titles($this->session->slideshow_id); 
				$data['sub_slides_body'] = $this->Slideshow_song_model->song_slides_body($this->session->slideshow_id); 
				$data['artistes'] = $this->Artiste_model->get_artistes_names();
            
				$data['Song']=$this; 
				//$this->load->view('read',$object);
			}
        else // if no presenter is selected, choose one											
        	$data['_view'] = 'presenter/select_presenter';
        
        $data['presenter_slides'] = $this->Presenter_model->get_presenter_slides($this->session->slideshow_id);
		$this->load->view('layouts/presenter_screen',$data);  
    }

  /*
     * Listing of presenter - mobile version and mobile
     */
    function version_2()
    {
		
		$data['presenter'] = $this->Presenter_model->get_all_presenter();
        
		//if a presenter and slideshow are already selected, proceed to presener view
		if ($this->session->presenter_id && $this->session->slideshow_id)
        	{
        		$this->load->model('Song_model');
				$data['_view'] = 'presenter/index';
				$data['this_presenter'] = $this->Presenter_model->get_presenter($this->session->presenter_id);
				$data['this_slideshow'] = $this->Presenter_model->get_slideshow($this->session->slideshow_id);
				$data['slides'] = $this->Slide_model->get_all_slideshow_slides($this->session->slideshow_id);
				$data['slides_count'] = $this->Presenter_model->count_slides($this->session->slideshow_id);
				$data['songs_titles'] = $this->Song_model->song_titles();
				$data['sub_slides_titles'] = $this->Slideshow_song_model->song_slides_titles($this->session->slideshow_id); 
				$data['sub_slides_body'] = $this->Slideshow_song_model->song_slides_body($this->session->slideshow_id); 
				$data['artistes'] = $this->Artiste_model->get_artistes_names();
            
				$data['Song']=$this; 
				//$this->load->view('read',$object);
			}
        else // if no presenter is selected, choose one											
        	$data['_view'] = 'presenter/select_presenter';
        
        $data['presenter_slides'] = $this->Presenter_model->get_presenter_slides($this->session->slideshow_id);
		$this->load->view('layouts/presenter_screen',$data);  
    }


	function select_presenter()
	{  
		$data['presenter'] = $this->Presenter_model->get_all_presenter();

		$presenter_id = $this->uri->segment(3);
		
		if($presenter_id)
			$this->session->set_userdata('presenter_id', $presenter_id); //store the presenter id into a session file
		
		$this->load->view('layouts/presenter_screen');  
		//redirect('presenter/');
	}
	
	function exit_presenter()
	{
		$this->session->set_userdata('presenter_id', null); //clear presenter variable
		redirect('presenter/index');
	}
	
	
	function select_slideshow()
	{
		
		//$data['presenter'] = $this->Presenter_model->get_all_presenter();

		$presenter_id = $this->uri->segment(3);
		$slideshow_id = $this->uri->segment(4);
		
		if($presenter_id && $slideshow_id)
			$this->session->set_userdata('presenter_id', $presenter_id); //store the presenter id into a session file
			$this->session->set_userdata('slideshow_id', $slideshow_id); //store the slideshow id into a session file
		
		redirect('presenter/');
	}
	
    /*
     * current slide
     */
    function select_slide()
    { 
		$slide_id = $this->uri->segment(3);
		$slideshow_id = $this->session->slideshow_id;
		$presenter_id = $this->session->presenter_id;
		
		$datestring = '%d%m%Y%h%i%s';
		$time = time();
		$my_timestamp = mdate($datestring, $time);//get the system timestamp
		
		
		$params = array(
				'presenter_id' => $presenter_id,
				'slideshow_id' => $slideshow_id,
				'slide_id' => $slide_id,
				'timecheck' => $my_timestamp,
            ); 
		   
		//checks to see if the slideshow exists in current slide table
		$slideshow_check = $this->Current_slide_model->find_slideshow( $slideshow_id );  // search for the  row for this slideshow_slide ()
		
		if ($slideshow_check)
			$this->Current_slide_model->update_entry( $params );  // updates existing entry
		else
			$this->Current_slide_model->save_slide( $params );  // creates a new entry	
		
		$current_slide = $this->Current_slide_model->get_slide_from_slideshow( $slideshow_id ); 
		$my_slide = $this->Presenter_model->get_slide( $current_slide['slide_id'] );
		echo $my_slide->body;
		echo '<script>
			$(".slide_number").html('.$my_slide->order.');
		</script>';  

		//write the timestamp to a file : 'assets/presenter/current_slide/slideshow_{slideshow_id}.kairos
		//write_file('assets/presenter/current_slide/slideshow_'.$slideshow_id.'.kairos', $my_timestamp); 
		write_file('assets/presenter/current_slide/slideshow_'.$slideshow_id.'.kairos', $my_timestamp);
		
    }
//gk general, general accidents
//2014
//honda fit shuttle
//1.9 million
//39 years old
//january 2018
	function screen_one()
	{
		$this->load->view('presenter/screen_one');
	}
	
	function obs_screen()
	{
		$this->load->view('presenter/screen_one_obs');
	}
	
	function screen_one_stream()
	{
		$this->load->view('presenter/screen_one_stream');
	} 

	function lite_scribe()
	{
		$this->load->view('presenter/lite_server');
	} 


	function show()
    {
		$this->load->view('presenter/show');
	} 

	function screen()
    {
		$current_slide = $this->Current_slide_model->get_slide_from_slideshow( $this->session->slideshow_id ); 
		if($current_slide)
		{
			$my_slide = $this->Presenter_model->get_slide( $current_slide['slide_id'] );
			
			if($my_slide->body != $this->session->userdata('show_'.$this->session->slideshow_id)) 
			{ 
				if($my_slide->type =="video"){
					preg_match('%(?:youtube(?:-nocookie)?\.com/(?:[^/]+/.+/|(?:v|e(?:mbed)?)/|.*[?&]v=)|youtu\.be/)([^"&?/ ]{11})%i',$my_slide->body, $match);
					$slide_body = "vid_".$match[1];
				}
				else if ($my_slide->type =="image")
						$slide_body =  "img_".$my_slide->body;
				else 
					$slide_body = $my_slide->body;
				echo $slide_body; 
				$this->session->set_userdata('show_'.$this->session->slideshow_id, $my_slide->body);
			}	
		} 
		else  
			echo "end of show";
    } 

    
    /*
     * textArea data Show of presenter
     */
    function slide_text()
    {
		$current_slide = $this->Current_slide_model->get_slide_from_slideshow( $this->session->slideshow_id ); 
	
		$data['screen'] = $this->Presenter_model->get_slide( $slide_id = $current_slide['slide_id'] );
		if($data['screen']){
			echo $data['screen']->body; 
			echo '<script>$(".slide_number").html('.$data['screen']->order.');</script>';      
				//$this->load->view('presenter/slide_text',$data);
		}
		else
			echo "No Slide ";
		
	   
      
    }
	function current_slide_id()
    {
		$current_slide = $this->Current_slide_model->get_slide_from_slideshow( $this->session->slideshow_id ); 
		echo '<script>$("#edit-slide-id").val('.$current_slide["slide_id"].');</script';
    }

    
	
	/*
     * Assign slideshow to live screen
     */
    function start_livescreen($pairing_code)
	{
	write_file('assets/presenter/pairing_code/'.$pairing_code.'.kairos', $this->session->slideshow_id);
	echo $pairing_code." was set";
	}
	
	
	/*
     * Adding a new presenter
     */
    function add()
    {   
	# Password Protect group/groups (by name)
		$group = array ('presenter','admin');
		if (!$this->ion_auth->in_group($group))
		{
			$this->session->set_flashdata('message', 'You are not authorized to view this page');
			redirect('auth/login');
		}
		
		
         if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'pairing_code' => random_string('alnum', 4),
				'title' => $this->input->post('title'),
				'title_crud' =>  slugify($this->input->post('title')),
				'description' => $this->input->post('description'),
				'font_size' => $this->input->post('font_size'),
				'styles' => $this->input->post('styles'),
				'notes' => $this->input->post('notes'),
				'description' => $this->input->post('description'),
            );
            
            $presenter_id = $this->Presenter_model->add_presenter($params);
            redirect('presenter/index');
        }
        else
        {            
            $data['_view'] = 'presenter/add';
            $this->load->view('layouts/main',$data);
        }
    }  

	
    /*
     * Editing a presenter
     */
    function edit($id)
    { 

# Password Protect group/groups (by name)
		$group = array ('presenter','admin');
		if (!$this->ion_auth->in_group($group))
		{
			$this->session->set_flashdata('message', 'You are not authorized to view this page');
			redirect('auth/login');
		}	
        // check if the presenter exists before trying to edit it
        $data['presenter'] = $this->Presenter_model->get_presenter($id);
        
        if(isset($data['presenter']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                if ($this->input->post('change_code'))
				{
					$this->load->helper('string'); //pull in strings to generate random()
					$pairing_code = random_string('alnum', 4);
				}
				else
					$pairing_code = $this->input->post('pairing_code');
					
				$params = array(
					'pairing_code' => $pairing_code,
					'title' => $this->input->post('title'),
					'title_crud' =>  slugify($this->input->post('title')),
					'description' => $this->input->post('description'),
					'font_size' => $this->input->post('font_size'),
					'styles' => $this->input->post('styles'),
					'notes' => $this->input->post('notes'),
					'description' => $this->input->post('description'),
				);
                $this->Presenter_model->update_presenter($id,$params);            
                redirect('presenter/index');
            }
            else
            {
                $data['_view'] = 'presenter/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The presenter you are trying to edit does not exist.');
    } 

 
    /*
     * Deleting presenter
     */
    function remove($id)
    {
      
# Password Protect group/groups (by name)
		$group = array ('presenter','admin');
		if (!$this->ion_auth->in_group($group))
		{
			$this->session->set_flashdata('message', 'You are not authorized to view this page');
			redirect('auth/login');
		}	  $presenter = $this->Presenter_model->get_presenter($id);

        // check if the presenter exists before trying to delete it
        if(isset($presenter['id']))
        {
            $this->Presenter_model->delete_presenter($id);
            redirect('presenter/index');
        }
        else
            show_error('The presenter you are trying to delete does not exist.');
    }
	
	
	//////// EXPERIMENTAL ////////////////
	
	//cOPY eNTIRE SONG FUNCTION 
	/*song slides*/ 
	function song_slides($id)
	{
	    // check if the song exists before trying to preview it
        $song = $this->Song_model->get_song($id);
        
       //  $data['_view'] = 'song/preview';
	   $my_lyrics = '
		<div class="tab-pane" id="'.$song['slug'].$song['id'].'"> 
                      <p><pre>'.$song['lyrics'].'</pre></p>
                    </div>
					<div id="dummy_tab"></div>
	   ';
        /* $this->load->view('song/preview',$data); */
           $slides = $this->Slide_model->get_song_slides($id); 
           
		echo  '<div class="tab-pane" id="'.$song['slug'].$song['id'].'"><p><ul class="slide-tiles">';
         
		foreach($slides as $s)
		{        
			echo '<li id="slide_thumb'.$s['id'].'"><a href="#'.$s['id'].'" class="click_slide" onclick="changeSlide('.$s['id'].')">- '.$s['order'].' -<pre id="slidebody'.$s['id'].'">'.$s["body"].'</pre></a>
			<a href="#" uk-icon="icon: file-edit" onClick="edit_slide('.$s['id'].')" ></a>
			<a href="#" uk-icon="icon: trash" onClick="delete_slide('.$s['id'].')"></a></li>';  
        }
		echo '<li id="slide_thumb_add">
				<a href="#" class="click_slide" onclick="addSlide('.$song['id'].')"><span uk-icon="icon: plus-circle; ratio: 2"></span> Add Slide</a>
				<hr/>
				<a href="#" onClick="get_lyrics('.$id.')"><span uk-icon="icon: file-text; ratio: 2"></span> Full Lyrics</a>
			</li>';
		 
		echo  '</ul></p></div><div id="dummy_tab"></div>'; 
	}
}
